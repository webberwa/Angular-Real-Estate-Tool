<form [formGroup]="providersForm">
  <div class="row">
    <div class="col-sm-12">
      <mat-form-field>
<<<<<<< HEAD
        <input matInput placeholder="Name" formControlName="name" />
=======
        <input matInput
          placeholder="Name"
          formControlName="name"
          [errorStateMatcher]="matcher">
        <mat-error *ngIf="providersForm.get('name').hasError('required')">
            Name is <strong>required</strong>
        </mat-error>
        <mat-error *ngIf="providersForm.get('name').hasError('pattern')">
            Name cannot contain <strong>numbers</strong>
        </mat-error>
>>>>>>> f0a203c24360f1f27918a451c337d8fe791f7650
      </mat-form-field>
    </div>
    <div class="col-sm-12">
      <mat-form-field>
<<<<<<< HEAD
        <mat-select placeholder="Provider Types" formControlName="type">
          <mat-option *ngFor="let type of providerTypes" [value]="type.value">
            {{ type.label }}
=======
        <mat-select placeholder="Provider Types"
          formControlName="type"
          [errorStateMatcher]="matcher">
          <mat-option *ngFor="let type of providerTypes"
            [value]="type.value">
            {{type.label}}
>>>>>>> f0a203c24360f1f27918a451c337d8fe791f7650
          </mat-option>
        </mat-select>
        <mat-error *ngIf="providersForm.get('address.state').hasError('required')">
            State is <strong>required</strong>
        </mat-error>
      </mat-form-field>
    </div>
    <div class="col-sm-12">
      <mat-form-field>
<<<<<<< HEAD
        <input
          matInput
          mask="(000) 000-0000"
          placeholder="Phone Number"
          formControlName="phone_number"
        />
=======
        <input matInput
          placeholder="Phone Number (XXXXXXXXXX)"
          formControlName="phone_number"
          [errorStateMatcher]="matcher">
        <mat-error *ngIf="providersForm.get('phone_number').hasError('required')">
            Phone Number is <strong>required</strong>
        </mat-error>
        <mat-error *ngIf="providersForm.get('phone_number').hasError('minlength') || providersForm.get('phone_number').hasError('maxlength')">
            Phone Number is not <strong>valid</strong>
        </mat-error>
>>>>>>> f0a203c24360f1f27918a451c337d8fe791f7650
      </mat-form-field>
    </div>
    <div class="col-sm-12">
      <mat-form-field>
<<<<<<< HEAD
        <input matInput placeholder="Email" formControlName="email" />
      </mat-form-field>
    </div>
    <div class="col-sm-12">
      <mat-form-field>
        <input matInput placeholder="Address 1" formControlName="addr1" />
      </mat-form-field>
    </div>
    <div class="col-sm-12">
      <mat-form-field>
        <input matInput placeholder="Address 2" formControlName="addr2" />
      </mat-form-field>
    </div>
    <div class="col-sm-12">
      <button
        mat-raised-button
=======
        <input matInput
          placeholder="Email"
          formControlName="email"
          [errorStateMatcher]="matcher">
        <mat-error *ngIf="providersForm.get('email').hasError('email') && !providersForm.get('email').hasError('required')">
            Please enter a valid email address
          </mat-error>
            <mat-error *ngIf="providersForm.get('email').hasError('required')">
            Email is <strong>required</strong>
          </mat-error>
      </mat-form-field>
    </div>
    <div class="row" formGroupName="address" style="margin-right: 0px; margin-left: 0px;">
      <div class="col-sm-12">
        <mat-form-field>
          <input matInput
            placeholder="Street"
            formControlName="street"
            [errorStateMatcher]="matcher">
          <mat-error *ngIf="providersForm.get('address.street').hasError('required')">
              Street is <strong>required</strong>
          </mat-error>
        </mat-form-field>
      </div>
      <div class="col-sm-4">
        <mat-form-field>
          <input matInput
            placeholder="City"
            formControlName="city"
            [errorStateMatcher]="matcher">
          <mat-error *ngIf="providersForm.get('address.city').hasError('required')">
              City is <strong>required</strong>
          </mat-error>
          <mat-error *ngIf="providersForm.get('address.city').hasError('pattern')">
              City cannot contain <strong>numbers</strong>
          </mat-error>
        </mat-form-field>
      </div>
      <div class="col-sm-4">
          <mat-form-field>
              <mat-select placeholder="State" formControlName="state" [errorStateMatcher]="matcher">
                <mat-option>None</mat-option>
                <mat-option *ngFor="let state of this.providers.states" [value]="state">{{state.abbr}}</mat-option>
              </mat-select>
              <mat-error *ngIf="providersForm.get('address.state').hasError('required')">
                  State is <strong>required</strong>
              </mat-error>
          </mat-form-field>
      </div>
      <div class="col-sm-4">
          <mat-form-field>
            <input matInput
              placeholder="Zip"
              formControlName="zip"
              [errorStateMatcher]="matcher">
            <mat-error *ngIf="providersForm.get('address.zip').hasError('required')">
                Zipcode is <strong>required</strong>
            </mat-error>
            <mat-error *ngIf="providersForm.get('address.zip').hasError('minlength') || providersForm.get('address.zip').hasError('maxlength')">
                Zipcode is <strong>invalid</strong>
            </mat-error>
          </mat-form-field>
      </div>
    </div>
    <div class="col-sm-12">
      <button mat-raised-button
        [disabled]="!providersForm.valid"
>>>>>>> f0a203c24360f1f27918a451c337d8fe791f7650
        (click)="providers.addProvider(providersForm)"
        [disabled]="!providersForm.valid"
        color="primary"
      >
        Create Provider
      </button>
    </div>
  </div>
</form>
